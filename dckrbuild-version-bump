#!/usr/bin/perl
# vim: sts=4 sw=4 et

use warnings;
use Dpkg::Changelog::Parse qw(changelog_parse);
use POSIX qw(locale_h strftime);
use Getopt::Long;

setlocale(LC_TIME, "C");

my $ci_tag = "";
my $ci_branch = "";
GetOptions('tag=s' => \$ci_tag, 'branch=s' => \$ci_branch);

my $dist = $ARGV[0] || "ubuntu20.04";

print("Tag: $ci_tag, Branch: $ci_branch, Dist: $dist\n");

sub git_version() {
    my $v = $ci_tag;
    if ($v eq "") {
        $v = `git describe --tags`;
        die "Git describe failed" if $? != 0;
    }
    $v =~ s/^\s+|\s+$//g;
    $v =~ s/^v//;
    return $v;
}

sub target_distribution($) {
    my $v = shift;
    my $t = "unstable";
    if ($ci_tag eq "") { $t="experimental"; }
    if (system("git describe --exact-match --tags v$v 2>/dev/null")) {
        $t = "experimental";
    }
    return $t;
}

$changelog = changelog_parse(file => 'debian/changelog');

die "No existing version in changelog" unless exists $changelog->{Version};
my $gitv = git_version();
my $target = target_distribution($gitv);

if ($target eq "experimental") {
    $gitv = "$gitv~exp";
}

print("Git version: $gitv\n");
print("Changelog version: $changelog->{Version}\n");
print("Distribution: $target\n");

my $date = strftime "%a, %d %b %Y %T %z", localtime();

open(my $fp, '>', "debian/changelog.bump");
print $fp "$changelog->{Source} ($gitv+$dist) $target; urgency=low

  * Build version bump

 -- Build Host <build\@build.lab80>  $date

";

open(my $ifp, '<', "debian/changelog") or die "Failed to open changelog for reading";
while(<$ifp>){
   print $fp $_;
}
close($ifp);

close($fp);

rename('debian/changelog.bump', 'debian/changelog');
